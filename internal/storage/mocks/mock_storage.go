// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AndIsaev/go-musthave-diploma-tlp/internal/storage (interfaces: Storage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	storage "github.com/AndIsaev/go-musthave-diploma-tlp/internal/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// Balance mocks base method.
func (m *MockStorage) Balance() storage.BalanceRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Balance")
	ret0, _ := ret[0].(storage.BalanceRepository)
	return ret0
}

// Balance indicates an expected call of Balance.
func (mr *MockStorageMockRecorder) Balance() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Balance", reflect.TypeOf((*MockStorage)(nil).Balance))
}

// Order mocks base method.
func (m *MockStorage) Order() storage.OrderRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Order")
	ret0, _ := ret[0].(storage.OrderRepository)
	return ret0
}

// Order indicates an expected call of Order.
func (mr *MockStorageMockRecorder) Order() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Order", reflect.TypeOf((*MockStorage)(nil).Order))
}

// System mocks base method.
func (m *MockStorage) System() storage.SystemRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "System")
	ret0, _ := ret[0].(storage.SystemRepository)
	return ret0
}

// System indicates an expected call of System.
func (mr *MockStorageMockRecorder) System() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "System", reflect.TypeOf((*MockStorage)(nil).System))
}

// User mocks base method.
func (m *MockStorage) User() storage.UserRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "User")
	ret0, _ := ret[0].(storage.UserRepository)
	return ret0
}

// User indicates an expected call of User.
func (mr *MockStorageMockRecorder) User() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "User", reflect.TypeOf((*MockStorage)(nil).User))
}

// Withdraw mocks base method.
func (m *MockStorage) Withdraw() storage.WithdrawRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Withdraw")
	ret0, _ := ret[0].(storage.WithdrawRepository)
	return ret0
}

// Withdraw indicates an expected call of Withdraw.
func (mr *MockStorageMockRecorder) Withdraw() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Withdraw", reflect.TypeOf((*MockStorage)(nil).Withdraw))
}
